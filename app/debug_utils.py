# app/debug_utils.py
"""
Funciones de depuraci√≥n para uso durante el desarrollo.
Estas funciones no son parte de la funcionalidad principal
y sirven principalmente para diagn√≥stico.
"""

from pathlib import Path
import pandas as pd


def debug_flag_paths(df, flags_config, cat_col="", current_dir=None):
    """
    Muestra informaci√≥n detallada sobre las rutas de las banderas para diagn√≥stico.
    
    Params:
        df: DataFrame con los datos
        flags_config: Configuraci√≥n de banderas del gr√°fico
        cat_col: Columna de categor√≠a (pa√≠ses, etc.)
        current_dir: Directorio actual para rutas relativas
    """
    if not flags_config.get("enabled", False):
        print("‚ö†Ô∏è Las banderas est√°n desactivadas en la configuraci√≥n.")
        return
    
    print("\nüîç DIAGN√ìSTICO DE RUTAS DE BANDERAS")
    print("====================================")
    
    # Obtener configuraci√≥n relevante
    flag_col = flags_config.get("column", "flag_url")
    pattern = flags_config.get("pattern", "")
    code_col = flags_config.get("code_column", "code")
    
    # Verificar columnas relevantes
    print(f"Columnas disponibles: {df.columns.tolist()}")
    
    if cat_col and cat_col in df.columns:
        print(f"‚úÖ Columna de categor√≠as '{cat_col}' encontrada")
    else:
        print(f"‚ö†Ô∏è Columna de categor√≠as '{cat_col}' no encontrada")
    
    if flag_col in df.columns:
        print(f"‚úÖ Columna de banderas '{flag_col}' encontrada")
        # Mostrar algunos valores de ejemplo
        print(f"   Ejemplos: {df[flag_col].head(3).tolist()}")
    else:
        print(f"‚ö†Ô∏è Columna de banderas '{flag_col}' no encontrada")
    
    if code_col in df.columns:
        print(f"‚úÖ Columna de c√≥digos '{code_col}' encontrada")
        # Mostrar algunos valores de ejemplo
        print(f"   Ejemplos: {df[code_col].head(3).tolist()}")
    else:
        print(f"‚ö†Ô∏è Columna de c√≥digos '{code_col}' no encontrada")
    
    # Verificar patr√≥n de banderas
    if pattern:
        print(f"‚úÖ Patr√≥n de banderas configurado: '{pattern}'")
    else:
        print("‚ö†Ô∏è Patr√≥n de banderas no configurado")
    
    # Directorio actual
    if current_dir:
        print(f"üìÇ Directorio actual: {current_dir}")
    
    # Verificar existencia de archivos para los primeros 5 pa√≠ses
    print("\nVerificando rutas de banderas para los primeros 5 elementos:")
    
    for i in range(min(5, len(df))):
        cat_name = df.iloc[i].get(cat_col, f"Elemento {i}") if cat_col in df.columns else f"Elemento {i}"
        print(f"\n- {cat_name}:")
        
        # 1. Verificar flag_url directa
        if flag_col in df.columns:
            flag_path = df.iloc[i].get(flag_col)
            if flag_path:
                if flag_path.startswith('/'):
                    abs_path = str(current_dir / flag_path.lstrip('/')) if current_dir else flag_path
                    exists = Path(abs_path).exists()
                    print(f"  ‚Ä¢ Ruta directa: {flag_path}")
                    print(f"  ‚Ä¢ Ruta absoluta: {abs_path}")
                    print(f"  ‚Ä¢ Existe: {'‚úÖ' if exists else '‚ùå'}")
                else:
                    exists = Path(flag_path).exists()
                    print(f"  ‚Ä¢ Ruta directa: {flag_path}")
                    print(f"  ‚Ä¢ Existe: {'‚úÖ' if exists else '‚ùå'}")
            else:
                print(f"  ‚Ä¢ No hay ruta directa en columna {flag_col}")
        
        # 2. Verificar construcci√≥n por patr√≥n
        if pattern and code_col in df.columns:
            code = str(df.iloc[i].get(code_col, "")).strip()
            if code:
                try:
                    constructed_path = pattern.format(code=code.lower(), CODE=code.upper())
                    exists = Path(constructed_path).exists()
                    print(f"  ‚Ä¢ C√≥digo: {code}")
                    print(f"  ‚Ä¢ Ruta construida: {constructed_path}")
                    print(f"  ‚Ä¢ Existe: {'‚úÖ' if exists else '‚ùå'}")
                except Exception as e:
                    print(f"  ‚Ä¢ Error al construir ruta con patr√≥n: {e}")
            else:
                print(f"  ‚Ä¢ No hay c√≥digo en columna {code_col}")
    
    # Sugerencias si hay problemas
    print("\nüí° SUGERENCIAS:")
    print("1. Aseg√∫rate que las rutas de las banderas sean correctas y los archivos existan.")
    print("2. Si usas rutas absolutas, verifica que comiencen desde la ra√≠z del proyecto.")
    print("3. Si usas un patr√≥n, verifica que los c√≥digos de pa√≠s sean correctos.")
    print("4. El patr√≥n debe tener los marcadores {code} o {CODE} para sustituci√≥n.")
    print("   Ejemplo: 'assets/flags/{code}.png'")